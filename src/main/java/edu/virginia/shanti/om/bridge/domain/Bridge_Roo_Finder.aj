// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package edu.virginia.shanti.om.bridge.domain;

import edu.virginia.shanti.om.bridge.domain.Bridge;
import java.lang.String;
import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;

privileged aspect Bridge_Roo_Finder {
    
    public static TypedQuery<Bridge> Bridge.findBridgesByLocalContext(String localContext) {
        if (localContext == null || localContext.length() == 0) throw new IllegalArgumentException("The localContext argument is required");
        EntityManager em = Bridge.entityManager();
        TypedQuery<Bridge> q = em.createQuery("SELECT o FROM Bridge AS o WHERE o.localContext = :localContext", Bridge.class);
        q.setParameter("localContext", localContext);
        return q;
    }
    
    public static TypedQuery<Bridge> Bridge.findBridgesByLocalSubContext(String localSubContext) {
        if (localSubContext == null || localSubContext.length() == 0) throw new IllegalArgumentException("The localSubContext argument is required");
        EntityManager em = Bridge.entityManager();
        TypedQuery<Bridge> q = em.createQuery("SELECT o FROM Bridge AS o WHERE o.localSubContext = :localSubContext", Bridge.class);
        q.setParameter("localSubContext", localSubContext);
        return q;
    }
    
}
